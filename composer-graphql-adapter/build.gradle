plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.7'
    id 'io.spring.dependency-management' version '1.1.7'
    //   id "com.google.protobuf" version "0.9.4"
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

ext {
    set('springCloudVersion', "2023.0.4")
    name = 'Composer graphql adapter'
    description = 'Graphql java to Camel adapter'
    version='0.0.1-SNAPSHOT'
    sourceEncoding='UTF-8'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    google()
    mavenCentral()
    maven { url 'https://repo.spring.io/release/' }
    maven { url "https://repo.spring.io/libs-snapshot-local" }
    maven { url "https://repo.spring.io/libs-milestone-local" }
    maven { url "https://repo.spring.io/libs-release-local" }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }

}
dependencies {
    implementation 'org.apache.camel:camel-core:4.8.1'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'io.projectreactor:reactor-core'
    implementation 'org.apache.camel.springboot:camel-spring-boot-starter:4.8.1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'org.springframework.boot:spring-boot-starter-graphql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.graphql:spring-graphql-test'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation project(path: ':composer-core')
    implementation project(path: ':commons')
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.platform:junit-platform-runner'
    testImplementation 'io.projectreactor:reactor-test'

}

test {
    useJUnitPlatform()
}
sourceSets {
    core {
        resources {
            srcDir "${project(':composer-core').projectDir}/src/main/resources"
            include "**"
        }
    }
    main {
//        java {
//
//            srcDirs 'build/generated/source/proto/main/java'
//        }
        resources {
            srcDirs += [
                    core.resources
            ]
        }
    }
}
